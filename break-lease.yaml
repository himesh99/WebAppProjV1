parameters:
  - name: azureSubscription
    type: string
  - name: storageAccountName
    type: string
  - name: containerName
    type: string
  - name: blobName
    type: string

steps:
  - task: AzureCLI@2
    displayName: 'Break Lease on ${{ parameters.blobName }}'
    condition: always()
    inputs:
      azureSubscription: '${{ parameters.azureSubscription }}'
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: |
        $storageAccountName = "$($env:storageAccountName)"
        Write-Host "Storage Account $storageAccountName"
        $containerName = "$($env:containerName)"
        Write-Host "Container $containerName"
        $blobName = "$($env:blobName)"
        Write-Host "Blob $blobName"

        $blobLeaseState = az storage blob show -c $containerName -n $blobName --account-name $storageAccountName --only-show-errors -o tsv --query "properties.lease.state"

        if ($blobLeaseState -eq "available") {
          Write-Host "No Lease Found on $blobName"
        }
        else {
          az storage blob lease break --blob-name $blobName --container-name $containerName --account-name $storageAccountName
        }

    env:
      storageAccountName: "${{ parameters.storageAccountName }}"
      containerName: "${{ parameters.containerName }}"
      blobName: "${{ parameters.blobName }}"