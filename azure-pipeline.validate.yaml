# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
- name: azureSubscription
  value: "4ac7e4ba-2b33-4c38-8852-1a6ba4098aa3"
- name: storageAccountName
  value: "storageaccounthpwebapp"
- name: containerName
  value: "containerhp"
- name: blobName
  value: "tfstatefiles"

stages:
- stage:
  displayName: Terraform Init and Plan
  jobs:
  - deployment:
    displayName: Terraform Init and Plan
    environment: 'hpvalidation'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - task: TerraformTaskV4@4
            displayName: terraform init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'UKDDC_Azure_Subscription'
              backendAzureRmResourceGroupName: 'patelh-sandbox-rg'
              backendAzureRmStorageAccountName: 'sahpstatevuks01'
              backendAzureRmContainerName: 'tfstatefiles'
              backendAzureRmKey: 'terraform.tfstate'

          - template: ./break-lease.yaml
            parameters:
              azureSubscription: ${{ variables.azureSubscription}}
              storageAccountName: ${{ variables.storageAccountName}}
              containerName: ${{ variables.containerName}}
              blobName: ${{ variables.blobName}}

          - task: TerraformTaskV4@4
            displayName: terraform plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'UKDDC_Azure_Subscription'
              backendAzureRmResourceGroupName: 'patelh-sandbox-rg'

