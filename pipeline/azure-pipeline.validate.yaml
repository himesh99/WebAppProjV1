# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- bugfix*
- bugfix/**

parameters:
- name: environments
  type: object
  default:
    - name: Development
      dependsOnEnv: ""
    - name: Production
      dependsOnEnv: "Development"
      
pool:
  vmImage: ubuntu-latest

variables:
  workingDirectory: $(System.DefaultWorkingDirectory)/terraform

stages:
- ${{ each env in parameters.environments }}:
  - stage: Terraform_Init_${{ env.name }}
    displayName: Terraform Init and Plan for ${{ env.name }}
    jobs:
      - job: terraformInit_${{ env.name }}
        displayName: Terraform Init and Plan ${{ env.name }}
        steps:
          - template: ../template/terraform.validation.yaml
            parameters:
              environmentServiceNameAzureRM: ${{ variables.environmentServiceNameAzureRM }}
              backendAzureRmResourceGroupName: ${{ variables.backendAzureRmResourceGroupName }}
              backendAzureRmStorageAccountName: ${{ variables.backendAzureRmStorageAccountName }}
              backendAzureRmContainerName: ${{ variables.backendAzureRmContainerName }}
              backendAzureRmKey: ${{ variables.backendAzureRmKey }}
              tfversion: ${{ variables.tfversion }}
              backendServiceArm: ${{ variables.backendServiceArm }}
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
