parameters:
  - name: tfversion
    type: string
  - name: backendServiceArm
    type: string
  - name: backendAzureRmResourceGroupName
    type: string
  - name: backendAzureRmStorageAccountName
    type: string
  - name: backendAzureRmContainerName
    type: string
  - name: workingDirectory
    type: string
  - name: backendAzureRmKey
    type: string
  - name: environmentServiceNameAzureRM
    type: string
  - name: tfvarsfile
    type: string
  - name: env
    type: string


steps:
  - task: TerraformCLI@1
    displayName: 'Terraform format'
    inputs:
      command: 'fmt'
      allowTelemetryCollection: false
      workingDirectory: ${{ parameters.workingDirectory }}
      
  - task: TerraformTaskV4@4
    displayName: Terraform Init
    inputs:
      provider: 'azurerm'
      command: 'init'
      tfVersion: ${{ parameters.tfversion }}
      backendServiceArm: ${{ parameters.backendServiceArm }}
      backendAzureRmResourceGroupName: ${{ parameters.backendAzureRmResourceGroupName }}
      backendAzureRmStorageAccountName: ${{ parameters.backendAzureRmStorageAccountName }}
      backendAzureRmContainerName: ${{ parameters.backendAzureRmContainerName }} 
      backendAzureRmKey: ${{ parameters.backendAzureRmKey }}
      workingDirectory: ${{ parameters.workingDirectory }}
      env:  ${{ parameters.env }}

  - task: TerraformCLI@1
    displayName: 'Terraform Validate'
    inputs:
      command: 'validate'
      allowTelemetryCollection: false
      workingDirectory: ${{ parameters.workingDirectory }}
    
          
  - task: TerraformTaskV4@4
    displayName: Terraform Plan
    inputs:
      provider: 'azurerm'
      command: 'plan'
      environmentServiceNameAzureRM: ${{ parameters.environmentServiceNameAzureRM }}
      backendAzureRmResourceGroupName: ${{ parameters.backendAzureRmResourceGroupName }}
      workingDirectory: ${{ parameters.workingDirectory }}
      commandOptions: '-var-file=${{ parameters.tfVarsFile }}'
      env:  ${{ parameters.env }}
      # commandOptions: >
      #   -var-file "$(System.DefaultWorkingDirectory)/terraform/envs/${{parameters.env}}.tfvars"
